---
- name: Get MySQL version.
  command: 'mysql --version'
  register: mysql_cli_version
  changed_when: false

- name: Acquire temporary root pass if MySQL 5.7.x
  shell: >
      awk '$0 ~ "temporary password" {print $11}' {{ mysql_log_error }}
  register: mysql_root_temp_password
  when: ((mysql_install_packages | bool) or mysql_root_password_update) and ('5.7.' in mysql_cli_version.stdout)

- name: Acquire temporary root pass if MySQL 8.0.x
  shell: >
      awk '$0 ~ "temporary password" {print $13}' {{ mysql_log_error }}
  register: mysql_root_temp_password
  when: ((mysql_install_packages | bool) or mysql_root_password_update) and ('8.0.' in mysql_cli_version.stdout)


- name: Copy .my.cnf file with temporary root password credentials
  template:
      src: "root-temporary-my.cnf.j2"
      dest: "{{ mysql_root_home }}/.my.cnf"
      owner: "{{ mysql_root_username }}"
      mode: 0600
  when: mysql_root_temp_password is defined and ('5.7.' in mysql_cli_version.stdout or '8.0.' in mysql_cli_version.stdout) and mysql_root_temp_password.stdout != ""

- name: Move mysqld.log file to mysqld.log.bak
  command: mv "{{ mysql_log_error }}" "{{ mysql_log_error }}.bak"
  notify: restart mysql
  when: mysql_root_temp_password is defined and ('5.7.' in mysql_cli_version.stdout or '8.0.' in mysql_cli_version.stdout) and mysql_root_temp_password.stdout != ""

- name: Test temporary root password expired
  shell: "mysql -NBe 'SELECT NOW();'"
  register: mysql_temp_password_test_result
  when: mysql_root_temp_password is defined
  ignore_errors: yes

- name: Update MySQL root password for localhost root account (5.7.x).
  shell: >
      mysql -NBe 'ALTER USER "{{ mysql_root_username }}"@"localhost" IDENTIFIED WITH mysql_native_password BY "{{ mysql_root_password }}";' --connect-expired-password
  when: mysql_temp_password_test_result is defined and 'connect-expired-password' in mysql_temp_password_test_result.stdout

- name: Overwrite .my.cnf file with root password credentials.
  template:
    src: "root-my.cnf.j2"
    dest: "{{ mysql_root_home }}/.my.cnf"
    owner: "{{ mysql_root_username }}"
    mode: 0600
  when: mysql_root_temp_password is defined and ('5.7.' in mysql_cli_version.stdout or '8.0.' in mysql_cli_version.stdout) and mysql_root_temp_password.stdout != ""

- name: Uninstall plugin validate_password
  shell: "mysql -NBe 'uninstall plugin validate_password;'"
  register: mysql_uninstall_plugin_result
  when: mysql_root_temp_password is defined and ('5.7.' in mysql_cli_version.stdout or '8.0.' in mysql_cli_version.stdout) and mysql_root_temp_password.stdout != ""
  ignore_errors: yes
